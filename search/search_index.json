{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home page","text":""},{"location":"#egr-314-team-204-embedded-systems-design","title":"EGR 314 Team 204 Embedded Systems Design","text":""},{"location":"#team-204","title":"Team 204","text":""},{"location":"#team-members-and-their-individual-websites","title":"Team members and their individual websites","text":"Team member Individual website Subsystem Andrey Podoprigora Andrey's Website Sensor Subsystem Divine Ndionyenma Divine's Website MQTT Subsystem Jacob Wilson Jacob's Website Actuator Subsystem Jake Strube Jake's Website HMI Subsystem"},{"location":"#organizational-info","title":"Organizational info","text":"<p>Arizona State University Spring 2025 EGR 314 Professor Daniel Aukes</p>"},{"location":"#project-overview","title":"Project Overview","text":"<p>Our project is a robot that can keep a designated distance from an object in front of it. It works by using three IR distance sensors to track any object that is in front of it relaying information to Andrey's subsystem. Two of the sensors are angled 45 degrees to the side and one is facing straight ahead. When the sensor facing straight ahead detects and object it either drives towards or away from the object to keep its designated distance from the object. If one of the sensors on the side detects the object the robot will turn till the object is detected on the middle sensor. The robot moves via two motors that are mounted on its base structure and controlled via Jacob's actuator subsystem. The speed that the motors move and the distance at which the robot is to keep from its object can be controlled via MQTT through Divine's subsystem or through the HMI with Jake's subsystem. All of the subsystems communicate with each other via UART to work together to make one seemless system.</p>"},{"location":"#final-product","title":"Final Product","text":""},{"location":"#documentation","title":"Documentation","text":"<ul> <li>Team Orgnaization</li> <li>Ideation and Concept Generation</li> <li>Block Diagram and Communication</li> <li>Innovation Showcase Poster</li> <li>Reflection</li> <li>Resources</li> <li>Appendix</li> </ul>"},{"location":"appendix/","title":"Appendix","text":"<p>Table 1: Team Member Communication Modes</p> Name First Choice Communication Second Choice Commmunication Andrey Podoprigora Discord Phone Divine Ndionyenma Discord Phone Jacob Wilson Discord Phone Jake Strube Discord Phone"},{"location":"appendix/#communication-procedures","title":"Communication Procedures :","text":"<ol> <li>Team 204 will engage in frequent messaging and constant updates to keep on track towards the Innovation Showcase deadline.  </li> <li>Team 204 will also handle instructor correspondence by keeping all group members up-to-date on any correspondence and updates that occurs.</li> </ol>"},{"location":"Block_Diagram_and_Communication/","title":"Team Block Diagram, Sequence Diagram, and Message types","text":""},{"location":"Block_Diagram_and_Communication/#1-team-block-diagram","title":"1) Team Block Diagram","text":"<p>Below is our connected team block diagram. It shows each individual block diagrams and then how all four will connect together physcially. The subsystems are chained togther with Divine's upstream of Andrey's, Andrey's upstream from Jacob's, Jacob's upstream from Jake's, and Jake's upstream from Divine's. Within each block diagram different colors are used for labeling different components to make it easier to visually see each system. Red is for power lines, purple is for any I2C or SPI components as well as the MQTT wifi, blue is for connections used to program the microcontroller, yellow is for UART Rx line to recieve messages and green is for the UART Tx line to transmit messages with orange showing the wires connecting each subsystem via UART and power. With our connectors our team can share power across all four boards while only one board is connected to an outside power source. The connectors have 8 pins we will be using 3 pins. Pin 1 as 9V power, pin 2 as UART either transmit or recieve, and Pin 8 as GND with every subsystem having uniform connector pins as set by the class standard. </p> <p></p>"},{"location":"Block_Diagram_and_Communication/#reference-individual-block-diagrams","title":"Reference -&gt; Individual Block Diagrams","text":"<p>Linked Below is each team member's individual block diagrams which go into more details about each block diagram.</p> <ul> <li>Andrey's Block Diagram</li> <li>Divine's Block Diagram</li> <li>Jacob's Block Diagram</li> <li>Jake's Block Diagram</li> </ul>"},{"location":"Block_Diagram_and_Communication/#2-sequence-diagram-of-team-communication","title":"2) Sequence Diagram of Team Communication","text":"<p>Below is our sequence diagram of team communication. It visualizes all the messages that we will send across our subsytems and how each message will interact with every subsystem and the user inputs. The messages at the top are sent as the inputs come in and the messages at the bottom in the loop are sent on a loop after a designated amount of time to keep updating certain variables. This loop allows the user to see the contiunues status of the device and the inputs allow the user to modify what the device is doing meeting the project requirements of displaying data and having an input that affects the whole system. </p> <p></p>"},{"location":"Block_Diagram_and_Communication/#3-message-types","title":"3) Message Types","text":"<p>Below is a table of our message types that we will be sending which describes the different messages that we might send as a team and their identifier to allow for easier reading and debugging. We decided to give each message a simple one byte message type to put after the sender in our messages sent to allow the reciever to quickly figure out what message is being recieved and how to process it. Examples of the message type in use is shown in the Message Protocol further down.</p> <p></p>"},{"location":"Block_Diagram_and_Communication/#4-message-protocol","title":"4) Message protocol","text":"<p>The Message Protocol is all the messages that we will be actively sending and recieving for each subsystem and what each subsystem will do with each message and how each messgae is sent. Underneath the table is a key to help understand the table. We choose to only send these messages because it keeps the amount of messages down to avoid clogging the system as well as allows for easier debugging. We decided that we didn't need to send all of the message types because some of our orignial message types are not needed to be sent like error messages that each system can just show on their debugging LEDS or starting up and shutting down each subsystem.</p> Message Type Message ID (Char) Andrey Role: Sensor ID: A Jacob Role: Motor ID:W Jake  Role: HMI ID: S Divine Role: MQTT ID: D Update motor set speed 2 - R: (Update speed at which motors move) S: (HMI menu and button press) S: (mqtt topic: /EGR314/TEAM204/MOTORSPEED) Update distance threshold 3 R: (update distance sensor wants to keep) - S: (HMI menu and button press) S: (mqtt topic: /EGR314/TEAM204/DISTANCE_SET) Update displayed motor speed 4 - - S: (HMI menu and button press) R:(Displayed on HMI) S: (mqtt topic: /EGR314/TEAM204/MOTORSPEED) R: (mqtt topic: /EGR314/TEAM204/MOTORSPEED) Update displayed sensor distance 5 S: (Sensor Value) - R:(Displayed on HMI) R: (mqtt topic: /EGR314/TEAM204/DISTANCE_VALUE) KEY Meaning S Sender R Reciever - Pass message"},{"location":"Block_Diagram_and_Communication/#5-biggest-changes-to-software-design","title":"5) Biggest Changes to Software Design","text":"<p>Our Biggest changes that we made to the software design was our message protcol, how the motor and sensor subsystem communicated, how the HMI system let the user send messages, how the motors would change their speed, and how the wifi would affect the overall system.</p> <p>The change to our message protcol was to make it simplier. We learned early on in our programming of the API that the more messages we have the harder it would be to make sure that each message worked and was properly received. We discovered that sending to many messages would jam the system and then the system recieving or the systems passing along messages would not be able to do any other processes because they could only process the messages. To fix this problem we reduced the amount of messages to the amount shown in the message protcol table as well as set delays between each message sent for example the sensor subsystem sneds its updated sensor value every fourth of a second rather than our orignal everytime the system updated because the system would update a new value so fast it would overload the HMI system not allowing the value to be displayed.</p> <p>Another change we implemented was how the motor and the sensor subsystems communicated. Originally the systems would communicate through their own dedicated SPI channel so that the sensor could send a message to the motor without clogging up the UART lines for everyone else. We eventually changed this idea and just had the sensor and the motor communicate via UART and just connected the sensor subsystem upstream of the motor system so that their messages did not have the get passes along through anyone else. We also have a delay so that the messages do not flood the system as explained in the last paragraph. </p> <p>One software change that proved to be useful was the way that the HMI system would allow the user to send the messages to the other systems. A menu system was added onto the HMI system that allowed the user to use a dial to navigate a menu system and adjust the speed and distance that the motor and sensor subsytem would follow. This menu system allowed for better customized messages as the user could choose a value 0 through 100 for either the speed or sensor following distance which would then be processed to a hex number and sent thought a UART message to the respective system which would then decode the hex value back to a decimal number and then process the message accordingly. Using his hex system proved useful and made the API easier to read as the values could be anywhere from one digit to three digits but hex makes it always two digits allowing all systems to easily stitch the two bytes togther to form the hex value and decode it.</p> <p>We also changed how the motors would adjust their speed according to the distance. Orignally we planned to set a max speed on the motors that would be set by the HMI or MQTT and then the speed would adjust exponentionally depending on the distance away from the object that the sensor detects. For example as the device approached an object the motors would get slower and slower allowing it to get to the correct distance more precisely. This proved to be difficult to intergrate and test on our system as the sensor would have to continuously update the motors and we would have to program an equation that would take the desired distance and the actual distance and make a control system so that the system would be critcally damped and not overshoot its desired distance. Instead we decided to go with just having a set speed that the HMI or MQTT would decide and then when the sensor detects that the device is within a desired range around the desired distance the motors would just turn off leading to a sudden stop and start when the device is not longer within the desired distance. This does lead to more strain on the motors and the structure of the device.</p> <p>One last software change that we made was with the MQTT system. We origianlly were gonna have the MQTT be able to drive the device around almost like an RC device but as well as be able to change the distance and motor speed values but we decided to scrap that idea and just have the MQTT system update the distance and speed as the wifi proved to not have a fast enough response time and a hard to control UI.</p> <p>We think that these software changes while taking away some features, made our device better and easier to work with for both the user and for us as the programmers.</p>"},{"location":"Concept_Ideation/","title":"Ideation and Concept Generation","text":"<p>This is the entry page for the directory that includes all files that are related to the Product Concept Generation activities and processes. This section is divided into multiple parts. Starting with our Product concepts brainstorming, where we came up with ideas for what our project will be this semester based off of course requirements and team intrests. Then we started Learning about creating science exhibits, which taught us more about creating an exhibit that can excit people and how we can make our project into an exhibit. After learning how to create a proper exhibit we started to develop our project idea even further with our Product Overview developed our Design Concept Sketches. From there we developed a Presentation to propose our project, talk more about what we want to accomplish, what we learned about creating exhibits and how our project follows the exhibit desing rules. Then we came up with our Final 3D Concept of our device.</p>"},{"location":"Concept_Ideation/Articles/","title":"Learning About Creating Science Exhibits","text":""},{"location":"Concept_Ideation/Articles/#articles","title":"Articles","text":"<ul> <li>Suggested Guidelines for Desinging Interactive Exhbits</li> <li>Designing with Interactives</li> </ul>"},{"location":"Concept_Ideation/Articles/#take-away-from-science-exhibit-articles","title":"Take Away from Science Exhibit Articles","text":"<p>The goal of our exhibit is to demonstrate how an ultrasonic distance sensor works and how we can make changes based on different distances that the sensor reads. We choose to use an ultrasonic distance sensor for our demonstration because it is a very common sensor used in devices like room navigating robots, backup sensors on cars, drones, and more. The hope of our exhibit is that the guests will leave having learned more about an ultrasonic distance sensor then they had known before, especially if they hadn\u2019t known anything about it before.  Our audience is applied to all ages with different amounts of knowledge about a distance sensor. We decided that the best approach to demonstrate and teach about the sensor was to create a device that can engage with anyone of any knowledge or age. We hope that our device appeals to people of all ages drawing their attention in a room full of lots of other exhibits and allows them to learn in a fun way that will help them remember the information that is being taught.</p>"},{"location":"Concept_Ideation/DesignConceptSketch/","title":"Design Concept Sketches","text":""},{"location":"Concept_Ideation/DesignConceptSketch/#pictures-illustrating-the-selected-design-concept","title":"Pictures illustrating the selected design concept","text":""},{"location":"Concept_Ideation/DesignConceptSketch/#3d-model","title":"3D Model","text":""},{"location":"Concept_Ideation/DesignConceptSketch/#orignial-sketches","title":"Orignial Sketches","text":""},{"location":"Concept_Ideation/Final_Concept/","title":"Final Concept","text":""},{"location":"Concept_Ideation/Final_Concept/#overview","title":"Overview","text":"<p>Here is our final concept in a 3D form. Compared to our original concept it kept almost the same outline we just adjusted the height and the sensors to fit more realistic size and space while including the user input functions on the top.</p>"},{"location":"Concept_Ideation/Final_Concept/#full-concept-with-casing","title":"Full Concept With Casing","text":""},{"location":"Concept_Ideation/Final_Concept/#concept-without-casing-showing-pcbs-inside","title":"Concept Without Casing Showing PCBs Inside","text":""},{"location":"Concept_Ideation/PresentationVideo/","title":"Presentation of Ideation and Concept","text":"<p>The video below is our presentation of our team charter, mission statement, a summary of our science exhibit readings, our organized design concepts, selection process, and concept sketches and model of the concept.</p>"},{"location":"Concept_Ideation/PresentationVideo/#presentation-video","title":"Presentation Video","text":""},{"location":"Concept_Ideation/ProductConceptsBrainstorming/","title":"Project Concepts Brainstorming","text":""},{"location":"Concept_Ideation/ProductConceptsBrainstorming/#raw-project-concepts","title":"Raw project concepts","text":"<p>The section below presents selection of the first \u2053100 concepts generated by the team in the initial stage of Design Ideation brainstorming. We came up with concepts that could teach all different kinds of scientific ideas and built off other ideas till we reached our desired amount.</p> <p></p> <p></p>"},{"location":"Concept_Ideation/ProductConceptsBrainstorming/#sorting-and-ranking-the-project-concepts","title":"Sorting and Ranking the Project Concepts","text":"<p>In this section you can see the results of processing the array of concepts presented on a previous page. We organized the ideas in two sections with subsections in each section. The main sections are Robots and Automatic Systems. We leaned most towards these two categories because they would allow us to follow the project requirements with sensors actuators and userinput both through wifi and physical input. In the concepts of special intrest section we choose our favorite ideas that we had to help us further organize and narrow down our choices.</p> <p></p> <p></p> <p></p>"},{"location":"Concept_Ideation/ProductConceptsBrainstorming/#final-concept-selection","title":"Final Concept Selection","text":"<p>And here you can witness our team's final choice of the project's design concept. We went with the concept of a robot that can chase an object. We decided that this would be a great way to showcase how an IR sensor works and also allows us to demonstrate how technology like this is used in devices that people use on the daily and don't even realise it. The concept also includes different ways of how the user might interact with the project and how we could accommodate a variety of different people of different ages and backgrounds. We brainstormed these ideas of inclusion once we found our main concept to help us more carefully brainstorm on how to make our device accessible.</p> <p></p>"},{"location":"Concept_Ideation/Productoverview/","title":"Product Overview","text":""},{"location":"Concept_Ideation/Productoverview/#device-description","title":"Device Description","text":"<p>Our interactive science exhibit is an object-following robot designed to engage and educate museum visitors through a hands-on, dynamic experience. The robot detects and follows an object in front of it, adjusting its movement in real-time to stay aligned. This functionality is achieved through a body that houses the electronic components and is powered by two motors on either side with three ultrasonic distance sensors placed at the front. These sensors are configured in a row with the two outer sensors angled outward to provide a broader field of vision. When an object is detected the sensors determine its location by which sensor sees it and the distance and the motors adjust accordingly ensuring the robot stays aligned with the central sensor. This feature is prominently showcased in our concept model and sketches which detail the placement of the sensors, actuators, and internal components, as well as the robot's behavior when interacting with objects. </p> <p>To enhance interactivity users can adjust the robot\u2019s following distance either through a web-based interface or directly on the device. The device is divided into four key systems: a sensor system for collecting data, an actuator system for movement, an internet-based two-way communication system for controlling distance and receiving sensor information, and a user interface that allows direct interaction via buttons and displays. To make the robot accessible to all visitors, clear visual and auditory cues will guide their interaction. A screen on the device will display instructions and buttons will be clearly labeled with icons or text to indicate their functions. For example, a distinctly colored button will initiate the object-following process and a sound might play to alert the user the process has started. This intuitive setup aligns with the principles outlined in \"Suggested Guidelines for Designing Interactive Exhibits,\" emphasizing simplicity and clarity. Our controls are designed for both ease and engagement. Visitors can start and stop the object-following mode, adjust the distance, or explore the web interface to see real-time sensor data and robot responses. By keeping the controls minimal yet functional we ensure that users can quickly grasp the device's capabilities without feeling overwhelmed. The design balances educational value with user-friendly functionality, encouraging visitors to explore further. </p> <p>To make the robot both appealing and robust we are enclosing it in a 3D-printed cover shaped like a mouse. This choice enhances durability by protecting the internal components and adds an element of charm that makes the robot approachable for visitors of all ages. Safety is a top priority: the robot will automatically stop moving if no object is detected within the designated range, preventing it from wandering aimlessly or colliding with obstacles. This design ensures a safe and controlled interaction while the exterior provides a comfortable experience.To minimize confusion a brief and clearly written set of instructions will be displayed near the exhibit outlining the robot\u2019s features and explaining how to interact with it. Visitors will also find additional information about the robot\u2019s inner workings organized by subsystems. This explanation will follow the sequence of the robot's operation: sensing, processing, and movement, allowing users to understand the technology behind the exhibit. Visitors will leave with a greater appreciation for sensor technology, robotics, and interactive design, all while enjoying a memorable and engaging experience.</p>"},{"location":"Innovation_Showcase/","title":"Innovation Showcase","text":""},{"location":"Innovation_Showcase/#innovaton-showcase-poster","title":"Innovaton Showcase Poster","text":"<p>Below is our innvation showcase poster which shows from left to right our mission statement of our project, the initial concept as well as our final version of the device, then our block diagram and below that a key to each system and what group member worked on each part, then our outline of the communication sequence to demonstrate the messages that our devices are sending for the observer to help them understand how our device works, and a short paragraph about it below. </p> <p></p> <p>A Higher resoultion PDF can be found here: Innovation Showcase Poster PDF</p>"},{"location":"Reflection/","title":"Reflection of Project","text":""},{"location":"Reflection/#lessons-learned","title":"Lessons Learned","text":"<p>In Team 204 we all can agree, that the experience of working on this project turned out to be both challening and particularly educative, sometimes even in ways we haven't quite expected it to be. Here we present the top 10 most important things that we learned about the process of designing an Embedded System from this project: 1) PCB - first! This project has clearly demonstrated us, that there is no stronger fundament for programm/code configuration works than a tested and operation-verified Printed Circuit Board. Yes, a team member can have his/her susbsystem flawlessly functioning within a breadboard setup, but once the time comes to transfing it into the form of a PCB, a single faulty connection or a wrong on-surface trace placement can significantly slow down, if not ruin(!) all further system integration and set-up works. On our own experience, we've discorvered that it is crucial to finish PCB design and correlated operation verification testings as early as possible throughout the project development timeline. Operation-confirmed and working PCB is easily a half of the project's success! 2) Sometimes, datasheet is the best advisor! Many problems could have been avoided if more attention was put towards examining, exploring and interpreting datahseets in a right manner. Probably one of the most significant examples in support of this conclusion would be a 3-week delay, that happened with the process of configuring the project's sensor subsystem due to a single misinterpretation of the target sensor's I2C device adress! Making sure that you have understood and correctly interpreted the datasheet, is one of the largest, is not a central key to success in configuring your target electrical/electromechanical component 3) Knowing how to debug is almost important as knowing how to code! From the perspective of a project's end, we can definitely admit, that a lot of time could have been \"saved\" back at the active development period, if only we began to use the debugging tools earlier, than when we actually decided to. A conclusion like this is rational both to \"internal\", through-code debugging using tools like MPLAB Snap, and \"external\", based on oscilloscope probing and multimeter measurements. We want to particularly mention the value of Oscilloscope - considering how much our project relies on various types of serial communication, this tool simply doesn't have alternatives, that could handle the task of analyzing the communication sequences in such practical manner. Learning how to thoroughly use this tool ended up being no less than crucial to the configuration of some of our subsystems 4) Always plan ahead and keep in mind an approximate problem-solving strategy before starting to complete the working task, even if it seems relatively easy to complete! 5) Learning more about the target programming environment is never a bad idea! Being able to fluently code in target programming language/framework is optional, but almost always significantly simplifies your programming experience and is capable of solving a lot of potentially-wasted time 6) PCB design is a perfect case of \"better safe than sorry\"! Always try to eliminate as many potential signal/power transfer issues as possible at the stage of PCB design. Sure, you can always perform countless soldering adjustments, but after you get your PCB, its internal structure is \"set in stone\", and you can't do nothing about it 7) Soldering must be treated with extreme care and caution! A single proper soldering session can save enormous amount of time on post-soldering testings and fixing the soldering defects 8) Constantly keeping in touch with your teammates on the topic of inter-team communications and messaging format is crucial to the project's success! It will be really sad, if on the demo day the team will find out that team member #3 cannot receive proper information from team member #1, because one month ago the first team member decided to change the format of a specific \"single use\" message without notifying the others  9) Proper communication and knowledge sharing always rewards! Exchanging with your peers the information known over a problem can be as helpful as searching for information online or asking for help on online forums 10) Internet is always your very last hope. Do not hesistate to browse your problematic question as deep and broad as possible, as sometimes the perfect solution might be waiting you in the most unexpected places ever!</p>"},{"location":"Reflection/#recommendations-for-the-future-generations","title":"RecommendationS for the future generationS!","text":""},{"location":"Reflection/#designing-the-version-20","title":"Designing the Version 2.0","text":"<p>???</p>"},{"location":"Resources/","title":"Resources","text":""},{"location":"Resources/#cad-files","title":"CAD Files","text":"<p>Below are the CAD files that our team used to 3D model and 3D print our device and its various components for its structure. In each ZIP file is the STEP and STL Files</p>"},{"location":"Resources/#robot-dome","title":"Robot Dome","text":"<ul> <li>Robot Dome zip Folder</li> </ul>"},{"location":"Resources/#dome-top","title":"Dome Top","text":"<ul> <li>Dome Top zip Folder</li> </ul>"},{"location":"Resources/#pcb-supports","title":"PCB Supports","text":"<ul> <li>PCB Supports zip Folder</li> </ul>"},{"location":"Resources/#custom-button","title":"Custom Button","text":"<ul> <li>Custom Button zip Folder</li> </ul>"},{"location":"Resources/#custom-potentiometer-dial","title":"Custom Potentiometer Dial","text":"<ul> <li>Custom Potentiometer Dial zip Folder</li> </ul>"},{"location":"Resources/#sensor-cover","title":"Sensor Cover","text":"<ul> <li>Sensor Cover zip file</li> </ul>"},{"location":"Resources/#pictures-and-videos","title":"Pictures and Videos","text":""},{"location":"Resources/#final-project-at-innovation-showcase","title":"Final Project at Innovation Showcase","text":""},{"location":"Resources/#team-picture-at-innovation-showcase","title":"Team picture at Innovation Showcase","text":""},{"location":"Resources/#video-of-system-demonstration","title":"Video of System Demonstration","text":""},{"location":"Team_Organization/","title":"Team organization","text":"<p>This is the entry page for the directory that includes all files that are related to the team organization activities and processes. Within this section is the Product Mission Statement and the Team Charter. In the Mission Statement we layout our desired user experience and where we want the project to go and in the Team Charter we describe the goals that we hope to complete this semester and what we hope to get out of this project and the class.</p>"},{"location":"Team_Organization/Product_Mission_Statement/","title":"Product Mission Statement","text":""},{"location":"Team_Organization/Product_Mission_Statement/#product-mission-statement","title":"Product Mission Statement","text":""},{"location":"Team_Organization/Product_Mission_Statement/#our-product-offering","title":"Our Product Offering","text":"<p>Our teamwork is centered around developing the devices that can provide interaction with certain physical processes related to solid and liquid body mechanics, supporting a well-defined \u201ccontrol-feedback\u201d loop. As an important part of design process, we will also ensure that our products will be easy to setup and maintain by the sole effort of the end user</p>"},{"location":"Team_Organization/Product_Mission_Statement/#our-core-values","title":"Our Core Values","text":"<p>We want to contribute to facilitating physical education across middle and high schools. In this manner, the devices of our team should be able to provide interactive learning and exploration of the selected mechanical processes and phenomena. Along with this, we keen to reach smooth and intuitive user experience for our products</p>"},{"location":"Team_Organization/Product_Mission_Statement/#offering-and-values","title":"Offering and values","text":"<p>Based on the outlined core values and product offering-s, we can highlight an opportunity for a practical synthesis between those aspects of a product mission. We believe that a device that can provide interactive observation and exploration of the selected mechanical process would serve best in the context of learning and studying that process. On the other hand, efforts on making our systems easy to \u201chandle\u201d should contribute to creating an enhanced user experience for our clients. Altogether, we hope that those features will ensure that our product mission is headed towards helping to develop a more advanced system of physical education for students all across the country</p>"},{"location":"Team_Organization/Product_Mission_Statement/#summary","title":"Summary","text":"<p>Our team is dedicated to develop easy-to-maintain solutions representing different controllable processes and effects from mechanics for use by students in STEM-based classes as a supportive tool for interactive learning</p>"},{"location":"Team_Organization/teamcharter/","title":"Team Charter","text":""},{"location":"Team_Organization/teamcharter/#team-goals","title":"Team Goals","text":"<p>This semester, our team has established several goals to guide our efforts and drive success. Our primary goal is to develop a functional prototype of our device, which we plan to showcase to peers and professors at the Innovation Showcase in May. This prototype will embody the knowledge we have gained from this class and previous courses, as well as demonstrate our capabilities as engineers.</p> <p>Our second goal is to maintain high standards for documentation throughout the semester and in future endeavors. These standards include ensuring strong professionalism, correct grammar, and thorough documentation of even minor changes or challenges encountered during the project.</p> <p>Third, we aim to embrace a growth mindset by learning from the mistakes we make along the way. Mistakes are an inevitable part of any project, and we believe it is crucial to analyze them to avoid repetition and continuously improve ourselves. Additionally, we strive to build and strengthen professional connections. This includes deepening our relationships with professors and teammates, as well as networking with industry professionals and classmates. We recognize that collaboration is vital for achieving the full potential of any project.</p> <p>Finally, we aim to expand our understanding of existing products and techniques. By studying prior work, we can learn from others\u2019 successes and challenges, leveraging this knowledge to refine our own efforts. We believe that building on established knowledge is essential for advancing any product or innovation.</p>"},{"location":"static/node_modules/mathjax/","title":"MathJax","text":""},{"location":"static/node_modules/mathjax/#beautiful-math-in-all-browsers","title":"Beautiful math in all browsers","text":"<p>MathJax is an open-source JavaScript display engine for LaTeX, MathML, and AsciiMath notation that works in all modern browsers.  It was designed with the goal of consolidating the recent advances in web technologies into a single, definitive, math-on-the-web platform supporting the major browsers and operating systems.  It requires no setup on the part of the user (no plugins to download or software to install), so the page author can write web documents that include mathematics and be confident that users will be able to view it naturally and easily.  Simply include MathJax and some mathematics in a web page, and MathJax does the rest.</p> <p>Some of the main features of MathJax include:</p> <ul> <li> <p>High-quality display of LaTeX, MathML, and AsciiMath notation in HTML pages</p> </li> <li> <p>Supported in most browsers with no plug-ins, extra fonts, or special   setup for the reader</p> </li> <li> <p>Easy for authors, flexible for publishers, extensible for developers</p> </li> <li> <p>Supports math accessibility, cut-and-paste interoperability, and other   advanced functionality</p> </li> <li> <p>Powerful API for integration with other web applications</p> </li> </ul> <p>See http://www.mathjax.org/ for additional details about MathJax, and https://docs.mathjax.org for the MathJax documentation.</p>"},{"location":"static/node_modules/mathjax/#mathjax-components","title":"MathJax Components","text":"<p>MathJax version 3 uses files called components that contain the various MathJax modules that you can include in your web pages or access on a server through NodeJS.  Some components combine all the pieces you need to run MathJax with one or more input formats and a particular output format, while other components are pieces that can be loaded on demand when needed, or by a configuration that specifies the pieces you want to combine in a custom way.  For usage instructions, see the MathJax documentation.</p> <p>Components provide a convenient packaging of MathJax's modules, but it is possible for you to form your own custom components, or to use MathJax's modules directly in a node application on a server.  There are web examples showing how to use MathJax in web pages and how to build your own components, and node examples illustrating how to use components in node applications or call MathJax modules directly.</p>"},{"location":"static/node_modules/mathjax/#whats-in-this-repository","title":"What's in this Repository","text":"<p>This repository contains only the component files for MathJax, not the source code for MathJax (which are available in a separate MathJax source repository).  These component files are the ones served by the CDNs that offer MathJax to the web.  In version 2, the files used on the web were also the source files for MathJax, but in version 3, the source files are no longer on the CDN, as they are not what are run in the browser.</p> <p>The components are stored in the <code>es5</code> directory, and are in ES5 format for the widest possible compatibility.  In the future, we may make an <code>es6</code> directory containing ES6 versions of the components.</p>"},{"location":"static/node_modules/mathjax/#installation-and-use","title":"Installation and Use","text":""},{"location":"static/node_modules/mathjax/#using-mathjax-components-from-a-cdn-on-the-web","title":"Using MathJax components from a CDN on the web","text":"<p>If you are loading MathJax from a CDN into a web page, there is no need to install anything.  Simply use a <code>script</code> tag that loads MathJax from the CDN.  E.g.,</p> <pre><code>&lt;script id=\"MathJax-script\" async src=\"https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js\"&gt;&lt;/script&gt;\n</code></pre> <p>See the MathJax documentation, the MathJax Web Demos, and the MathJax Component Repository for more information.</p>"},{"location":"static/node_modules/mathjax/#hosting-your-own-copy-of-the-mathjax-components","title":"Hosting your own copy of the MathJax Components","text":"<p>If you want to host MathJax from your own server, you can do so by installing the <code>mathjax</code> package using <code>npm</code> and moving the <code>es5</code> directory to an appropriate location on your server:</p> <pre><code>npm install mathjax@3\nmv node_modules/mathjax/es5 &lt;path-to-server-location&gt;/mathjax\n</code></pre> <p>Note that we are still making updates to version 2, so include <code>@3</code> when you install, since the latest chronological version may not be version 3.</p> <p>Alternatively, you can get the files via GitHub:</p> <pre><code>git clone https://github.com/mathjax/MathJax.git mj-tmp\nmv mj-tmp/es5 &lt;path-to-server-location&gt;/mathjax\nrm -rf mj-tmp\n</code></pre> <p>Then (in either case) you can use a script tag like the following:</p> <pre><code>&lt;script id=\"MathJax-script\" async src=\"&lt;url-to-your-site&gt;/mathjax/tex-chtml.js\"&gt;&lt;/script&gt;\n</code></pre> <p>where <code>&lt;url-to-your-site&gt;</code> is replaced by the URL to the location where you moved the MathJax files above.</p> <p>See the documentation for details.</p>"},{"location":"static/node_modules/mathjax/#using-mathjax-components-in-a-node-application","title":"Using MathJax components in a node application","text":"<p>To use MathJax components in a node application, install the <code>mathjax</code> package:</p> <pre><code>npm install mathjax@3\n</code></pre> <p>(we are still making updates to version 2, so you should include <code>@3</code> since the latest chronological version may not be version 3).</p> <p>Then require <code>mathjax</code> within your application:</p> <pre><code>require('mathjax').init({ ... }).then((MathJax) =&gt; { ... });\n</code></pre> <p>where the first <code>{ ... }</code> is a MathJax configuration, and the second <code>{ ... }</code> is the code to run after MathJax has been loaded.  E.g.</p> <pre><code>require('mathjax').init({\nloader: {load: ['input/tex', 'output/svg']}\n}).then((MathJax) =&gt; {\nconst svg = MathJax.tex2svg('\\\\frac{1}{x^2-1}', {display: true});\nconsole.log(MathJax.startup.adaptor.outerHTML(svg));\n}).catch((err) =&gt; console.log(err.message));\n</code></pre> <p>Note: this technique is for node-based application only, not for browser applications.  This method sets up an alternative DOM implementation, which you don't need in the browser, and tells MathJax to use node's <code>require()</code> command to load external modules.  This setup will not work properly in the browser, even if you webpack it or bundle it in other ways.</p> <p>See the documentation and the MathJax Node Repository for more details.</p>"},{"location":"static/node_modules/mathjax/#reducing-the-size-of-the-components-directory","title":"Reducing the Size of the Components Directory","text":"<p>Since the <code>es5</code> directory contains all the component files, so if you are only planning one use one configuration, you can reduce the size of the MathJax directory by removing unused components. For example, if you are using the <code>tex-chtml.js</code> component, then you can remove the <code>tex-mml-chtml.js</code>, <code>tex-svg.js</code>, <code>tex-mml-svg.js</code>, <code>tex-chtml-full.js</code>, and <code>tex-svg-full.js</code> configurations, which will save considerable space.  Indeed, you should be able to remove everything other than <code>tex-chtml.js</code>, and the <code>input/tex/extensions</code>, <code>output/chtml/fonts/woff-v2</code>, <code>adaptors</code>, <code>a11y</code>, and <code>sre</code> directories.  If you are using the results only on the web, you can remove <code>adaptors</code> as well.</p> <p>If you are not using A11Y support (e.g., speech generation, or semantic enrichment), then you can remove <code>a11y</code> and <code>sre</code> as well (though in this case you may need to disable the assistive tools in the MathJax contextual menu in order to avoid MathJax trying to load them when they aren't there).</p> <p>If you are using SVG rather than CommonHTML output (e.g., <code>tex-svg.js</code> rather than <code>tex-chtml.js</code>), you can remove the <code>output/chtml/fonts/woff-v2</code> directory.  If you are using MathML input rather than TeX (e.g., <code>mml-chtml.js</code> rather than <code>tex-chtml.js</code>), then you can remove <code>input/tex/extensions</code> as well.</p>"},{"location":"static/node_modules/mathjax/#the-component-files-and-pull-requests","title":"The Component Files and Pull Requests","text":"<p>The <code>es5</code> directory is generated automatically from the contents of the MathJax source repository.  You can rebuild the components using the command</p> <pre><code>npm run make-es5 --silent\n</code></pre> <p>Note that since the contents of this repository are generated automatically, you should not submit pull requests that modify the contents of the <code>es5</code> directory.  If you wish to submit a modification to MathJax, you should make a pull request in the MathJax source repository.</p>"},{"location":"static/node_modules/mathjax/#mathjax-community","title":"MathJax Community","text":"<p>The main MathJax website is http://www.mathjax.org, and it includes announcements and other important information.  A MathJax user forum for asking questions and getting assistance is hosted at Google, and the MathJax bug tracker is hosted at GitHub.</p> <p>Before reporting a bug, please check that it has not already been reported.  Also, please use the bug tracker (rather than the help forum) for reporting bugs, and use the user's forum (rather than the bug tracker) for questions about how to use MathJax.</p>"},{"location":"static/node_modules/mathjax/#mathjax-resources","title":"MathJax Resources","text":"<ul> <li>MathJax Documentation</li> <li>MathJax Components</li> <li>MathJax Source Code</li> <li>MathJax Web Examples</li> <li>MathJax Node Examples</li> <li>MathJax Bug Tracker</li> <li>MathJax Users' Group</li> </ul>"}]}